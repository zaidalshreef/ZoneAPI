apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "zoneapi.fullname" . }}-migration-{{ .Values.image.tag | default .Chart.AppVersion | replace "." "-" }}
  labels:
    {{- include "zoneapi.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        {{- include "zoneapi.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          command:
            - /bin/bash
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do
                echo "PostgreSQL is not ready yet. Waiting..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
          env:
            - name: DB_HOST
              value: {{ .Values.database.host | quote }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: DB_USER
              value: {{ .Values.database.user | quote }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "zoneapi.fullname" . }}-db-secret
                  key: password
      containers:
        - name: migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/efbundle"]
          args: 
            - "--connection"
            - "Host={{ .Values.database.host }};Port={{ .Values.database.port }};Database={{ .Values.database.name }};Username={{ .Values.database.user }};Password=$(DB_PASSWORD);Command Timeout=300;"
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.environment | quote }}
            - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
              value: "/tmp"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "zoneapi.fullname" . }}-db-secret
                  key: password
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {} 