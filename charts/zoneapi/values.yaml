# Default values for zoneapi
# This is a YAML-formatted file.

replicaCount: 3

image:
  repository: ""  # Will be overridden by CI/CD
  pullPolicy: IfNotPresent
  tag: ""  # Will be overridden by CI/CD

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: zoneapi.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: zoneapi-tls
      hosts:
        - zoneapi.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Database configuration
database:
  host: ""  # Will be set by CI/CD
  port: 5432
  name: "zone"
  user: "postgres"
  password: ""  # Will be set by CI/CD via secret

# Health check configuration
healthCheck:
  enabled: true
  path: /health
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Environment configuration
environment: "Production"

# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false
    namespace: monitoring
    interval: 30s 